import type { ReceivedEventFollows } from "./receivedEventFollows";
import type { ReceivedEventPayload } from "./receivedEventPayload";
import type { RelatedResource } from "./relatedResource";
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Prefect Prefect REST API
 * OpenAPI spec version: 0.1.0
 */
import type { Resource } from "./resource";

/**
 * The server-side view of an event that has happened to a Resource after it has
been received by the server
 */
export interface ReceivedEvent {
	/** When the event happened from the sender's perspective */
	occurred: string;
	/** The name of the event that happened */
	event: string;
	/** The primary Resource this event concerns */
	resource: Resource;
	/** A list of additional Resources involved in this event */
	related?: RelatedResource[];
	/** An open-ended set of data describing what happened */
	payload?: ReceivedEventPayload;
	/** The client-provided identifier of this event */
	id: string;
	/** The ID of an event that is known to have occurred prior to this one. If set, this may be used to establish a more precise ordering of causally-related events when they occur close enough together in time that the system may receive them out-of-order. */
	follows?: ReceivedEventFollows;
	/** When the event was received by Prefect Cloud */
	received?: string;
}
