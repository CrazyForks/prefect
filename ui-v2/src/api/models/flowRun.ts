import type { FlowRunContext } from "./flowRunContext";
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Prefect Prefect REST API
 * OpenAPI spec version: 0.1.0
 */
import type { FlowRunCreated } from "./flowRunCreated";
import type { FlowRunCreatedBy } from "./flowRunCreatedBy";
import type { FlowRunDeploymentId } from "./flowRunDeploymentId";
import type { FlowRunDeploymentVersion } from "./flowRunDeploymentVersion";
import type { FlowRunEndTime } from "./flowRunEndTime";
import type { FlowRunExpectedStartTime } from "./flowRunExpectedStartTime";
import type { FlowRunFlowVersion } from "./flowRunFlowVersion";
import type { FlowRunIdempotencyKey } from "./flowRunIdempotencyKey";
import type { FlowRunInfrastructureDocumentId } from "./flowRunInfrastructureDocumentId";
import type { FlowRunInfrastructurePid } from "./flowRunInfrastructurePid";
import type { FlowRunJobVariables } from "./flowRunJobVariables";
import type { FlowRunLabels } from "./flowRunLabels";
import type { FlowRunNextScheduledStartTime } from "./flowRunNextScheduledStartTime";
import type { FlowRunParameters } from "./flowRunParameters";
import type { FlowRunParentTaskRunId } from "./flowRunParentTaskRunId";
import type { FlowRunPolicy } from "./flowRunPolicy";
import type { FlowRunStartTime } from "./flowRunStartTime";
import type { FlowRunState } from "./flowRunState";
import type { FlowRunStateId } from "./flowRunStateId";
import type { FlowRunStateName } from "./flowRunStateName";
import type { FlowRunStateType } from "./flowRunStateType";
import type { FlowRunUpdated } from "./flowRunUpdated";
import type { FlowRunWorkQueueId } from "./flowRunWorkQueueId";
import type { FlowRunWorkQueueName } from "./flowRunWorkQueueName";

/**
 * An ORM representation of flow run data.
 */
export interface FlowRun {
	id: string;
	created: FlowRunCreated;
	updated: FlowRunUpdated;
	/** The name of the flow run. Defaults to a random slug if not specified. */
	name?: string;
	/** The id of the flow being run. */
	flow_id: string;
	/** The id of the flow run's current state. */
	state_id?: FlowRunStateId;
	/** The id of the deployment associated with this flow run, if available. */
	deployment_id?: FlowRunDeploymentId;
	/** The version of the deployment associated with this flow run. */
	deployment_version?: FlowRunDeploymentVersion;
	/** The work queue that handled this flow run. */
	work_queue_name?: FlowRunWorkQueueName;
	/** The version of the flow executed in this flow run. */
	flow_version?: FlowRunFlowVersion;
	/** Parameters for the flow run. */
	parameters?: FlowRunParameters;
	/** An optional idempotency key for the flow run. Used to ensure the same flow run is not created multiple times. */
	idempotency_key?: FlowRunIdempotencyKey;
	/** Additional context for the flow run. */
	context?: FlowRunContext;
	empirical_policy?: FlowRunPolicy;
	/** A list of tags on the flow run */
	tags?: string[];
	/** A dictionary of key-value labels. Values can be strings, numbers, or booleans. */
	labels?: FlowRunLabels;
	/** If the flow run is a subflow, the id of the 'dummy' task in the parent flow used to track subflow state. */
	parent_task_run_id?: FlowRunParentTaskRunId;
	/** The type of the current flow run state. */
	state_type?: FlowRunStateType;
	/** The name of the current flow run state. */
	state_name?: FlowRunStateName;
	/** The number of times the flow run was executed. */
	run_count?: number;
	/** The flow run's expected start time. */
	expected_start_time?: FlowRunExpectedStartTime;
	/** The next time the flow run is scheduled to start. */
	next_scheduled_start_time?: FlowRunNextScheduledStartTime;
	/** The actual start time. */
	start_time?: FlowRunStartTime;
	/** The actual end time. */
	end_time?: FlowRunEndTime;
	/** Total run time. If the flow run was executed multiple times, the time of each run will be summed. */
	total_run_time?: number;
	/** A real-time estimate of the total run time. */
	estimated_run_time?: number;
	/** The difference between actual and expected start time. */
	estimated_start_time_delta?: number;
	/** Whether or not the flow run was automatically scheduled. */
	auto_scheduled?: boolean;
	/** The block document defining infrastructure to use this flow run. */
	infrastructure_document_id?: FlowRunInfrastructureDocumentId;
	/** The id of the flow run as returned by an infrastructure block. */
	infrastructure_pid?: FlowRunInfrastructurePid;
	/** Optional information about the creator of this flow run. */
	created_by?: FlowRunCreatedBy;
	/** The id of the run's work pool queue. */
	work_queue_id?: FlowRunWorkQueueId;
	/** The current state of the flow run. */
	state?: FlowRunState;
	/** Variables used as overrides in the base job template */
	job_variables?: FlowRunJobVariables;
}
