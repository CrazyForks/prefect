import type { DeploymentCreateConcurrencyLimit } from "./deploymentCreateConcurrencyLimit";
import type { DeploymentCreateConcurrencyOptions } from "./deploymentCreateConcurrencyOptions";
import type { DeploymentCreateDescription } from "./deploymentCreateDescription";
import type { DeploymentCreateEntrypoint } from "./deploymentCreateEntrypoint";
import type { DeploymentCreateInfrastructureDocumentId } from "./deploymentCreateInfrastructureDocumentId";
import type { DeploymentCreateJobVariables } from "./deploymentCreateJobVariables";
import type { DeploymentCreateLabels } from "./deploymentCreateLabels";
import type { DeploymentCreateParameterOpenapiSchema } from "./deploymentCreateParameterOpenapiSchema";
import type { DeploymentCreateParameters } from "./deploymentCreateParameters";
import type { DeploymentCreatePath } from "./deploymentCreatePath";
import type { DeploymentCreatePullSteps } from "./deploymentCreatePullSteps";
import type { DeploymentCreateStorageDocumentId } from "./deploymentCreateStorageDocumentId";
import type { DeploymentCreateVersion } from "./deploymentCreateVersion";
import type { DeploymentCreateWorkPoolName } from "./deploymentCreateWorkPoolName";
import type { DeploymentCreateWorkQueueName } from "./deploymentCreateWorkQueueName";
/**
 * Generated by orval v7.5.0 üç∫
 * Do not edit manually.
 * Prefect Prefect REST API
 * OpenAPI spec version: 0.1.0
 */
import type { DeploymentScheduleCreate } from "./deploymentScheduleCreate";

/**
 * Data used by the Prefect REST API to create a deployment.
 */
export interface DeploymentCreate {
	/** The name of the deployment. */
	name: string;
	/** The ID of the flow associated with the deployment. */
	flow_id: string;
	/** Whether or not the deployment is paused. */
	paused?: boolean;
	/** A list of schedules for the deployment. */
	schedules?: DeploymentScheduleCreate[];
	/** The deployment's concurrency limit. */
	concurrency_limit?: DeploymentCreateConcurrencyLimit;
	/** The deployment's concurrency options. */
	concurrency_options?: DeploymentCreateConcurrencyOptions;
	/** Whether or not the deployment should enforce the parameter schema. */
	enforce_parameter_schema?: boolean;
	/** The parameter schema of the flow, including defaults. */
	parameter_openapi_schema?: DeploymentCreateParameterOpenapiSchema;
	/** Parameters for flow runs scheduled by the deployment. */
	parameters?: DeploymentCreateParameters;
	/** A list of deployment tags. */
	tags?: string[];
	/** A dictionary of key-value labels. Values can be strings, numbers, or booleans. */
	labels?: DeploymentCreateLabels;
	pull_steps?: DeploymentCreatePullSteps;
	work_queue_name?: DeploymentCreateWorkQueueName;
	/** The name of the deployment's work pool. */
	work_pool_name?: DeploymentCreateWorkPoolName;
	storage_document_id?: DeploymentCreateStorageDocumentId;
	infrastructure_document_id?: DeploymentCreateInfrastructureDocumentId;
	description?: DeploymentCreateDescription;
	path?: DeploymentCreatePath;
	version?: DeploymentCreateVersion;
	entrypoint?: DeploymentCreateEntrypoint;
	/** Overrides for the flow's infrastructure configuration. */
	job_variables?: DeploymentCreateJobVariables;
}
